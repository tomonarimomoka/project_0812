'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var hasOwn = require('hasown');

// data descriptor properties
var data = {
	__proto__: null,
	configurable: 'boolean',
	enumerable: 'boolean',
	writable: 'boolean'
};

module.exports = function isDataDescriptor(obj, prop) {
	if (!obj || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') {
		return false;
	}

	if (typeof prop === 'string') {
		var val = Object.getOwnPropertyDescriptor(obj, prop);
		return typeof val !== 'undefined';
	}

	if (!('value' in obj) && !('writable' in obj) || 'get' in obj || 'set' in obj) {
		return false;
	}

	for (var key in obj) {
		// eslint-disable-line no-restricted-syntax
		if (key !== 'value' && hasOwn(obj, key) && hasOwn(data, key) && _typeof(obj[key]) !== data[key] && typeof obj[key] !== 'undefined') {
			return false;
		}
	}
	return true;
};